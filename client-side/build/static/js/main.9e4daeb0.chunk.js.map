{"version":3,"sources":["components/create-entry.jsx","components/entries-feed.jsx","components/loginsystem/login.jsx","components/main.jsx","App.js","index.js"],"names":["CreateEntry","submitEntry","event","preventDefault","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","newPostValue","_this","refs","NewPost","value","newPost","message","date","fetch","method","mode","cache","credentials","headers","Content-Type","redirect","referrer","body","JSON","stringify","then","res","console","log","data","catch","err","postValueToPass","props","updateEntries","cancelEntry","react_default","a","createElement","className","ref","placeholder","onClick","this","Component","EntriesFeed","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","postsArrayCopy","state","posts","slice","push","setState","callBackendAPI","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","sent","json","status","Error","abrupt","stop","deleteLastEntry","window","confirm","loaded","_this2","create_entry_CreateEntry","map","post","index","Login","_useState","useState","_useState2","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","handleChange","target","name","onSubmit","length","user","setLogin","type","onChange","Main","login","react_router_dom","index_es","classToggle","triggerElement","offset","to","react_router","path","exact","component","EntriesList","render","components_loginsystem_login","App","main","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9e4daeb0.chunk.js","sourcesContent":["import React, {Component} from 'react';\n// import './create-entry.css';\n\nexport default class CreateEntry extends Component {\n\n  submitEntry = (event) => {\n    event.preventDefault();\n\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n\n    if (dd < 10) dd = '0' + dd ;\n    if (mm < 10) mm = '0'+ mm;\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    let newPostValue = this.refs.NewPost.value;\n\n    if(newPostValue !== \"\"){\n      const newPost = { message: newPostValue, date: today }\n\n      fetch('/api/add', {\n          method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n          mode: \"cors\", // no-cors, cors, *same-origin\n          cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: \"same-origin\", // include, *same-origin, omit\n          headers: { \"Content-Type\": \"application/json\" },\n          redirect: \"follow\", // manual, *follow, error\n          referrer: \"no-referrer\", // no-referrer, *client\n          body: JSON.stringify(newPost), // body data type must match \"Content-Type\" header\n      }).then((res) => console.log(res))\n      .then((data) =>  console.log(data))\n      .catch((err)=> console.log(err))\n\n      let postValueToPass = newPostValue;\n      this.props.updateEntries(postValueToPass);\n      this.refs.NewPost.value = '';\n\n      return postValueToPass;\n    }\n  }\n\n  cancelEntry = () => {\n    this.refs.NewPost.value = '';\n  }\n\n  render() {\n    return (\n      <div className=\"create-entry\">\n        <textarea ref=\"NewPost\" placeholder=\"Feel free to blabber here...\"></textarea>\n        <div className=\"create-entry-buttons\">\n          <button className=\"PrimaryButton\" onClick={this.submitEntry}>Submit</button>\n          <button className=\"SecondaryButton\" onClick={this.cancelEntry}>Cancel</button>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, {Component} from 'react';\nimport CreateEntry from './create-entry';\n// import { Controller, Scene } from 'react-scrollmagic';\n// import './entries-feed.css'\n\nexport default class EntriesFeed extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      posts: [],\n      loaded: false\n    }\n  }\n\n  updateEntries = (message) => {\n    let today = new Date();\n    let dd = today.getDate();\n    let mm = today.getMonth() + 1;\n    let yyyy = today.getFullYear();\n\n    if (dd < 10) dd = '0' + dd ;\n    if (mm < 10) mm = '0'+ mm;\n\n    today = mm + '/' + dd + '/' + yyyy;\n\n    let postsArrayCopy = this.state.posts.slice();\n    postsArrayCopy.push({message: message, date: today});\n    this.setState({posts:postsArrayCopy})\n  }\n\n  componentDidMount() {\n    this.callBackendAPI()\n      .then(res => this.setState({posts: res}))\n      .catch(err => console.log(err));\n    this.setState({loaded: true})\n  }\n\n  callBackendAPI = async () => {\n    const response = await fetch('/api/posts');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n     throw Error(body.message)\n    }\n\n    return body;\n  };\n\n  deleteLastEntry = () => {\n    if (window.confirm(\"Press OK to confirm.\")) {\n      console.log('Post not removed because I don\\'t know how');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <CreateEntry updateEntries={this.updateEntries} />\n        <div className=\"submissions\">\n          {\n            !this.state.loaded ? (<p>loading...</p>) :\n            (this.state.posts.map((post, index) => {\n              if(post.message && post.date){\n                return (\n                  <div className=\"submissions_post\">\n                    <p>{post.message}</p>\n                    <p className=\"submissions_post_date\">{post.date}</p>\n                  </div>\n                )\n              }\n              else {\n                return null;\n              }\n            }))\n          }\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react';\nimport './login.css';\n\nexport const Login = (props) => {\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = (event) => {\n    if(event.target.name === \"username\"){\n      setUsername(event.target.value);\n    } else if (event.target.name === \"password\") {\n      setPassword(event.target.value)\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(username !== \"\" && password.length > 3){\n      const user = { username: username, password: password }\n      fetch('/api/login', {\n          method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n          mode: \"cors\", // no-cors, cors, *same-origin\n          cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n          credentials: \"same-origin\", // include, *same-origin, omit\n          headers: { \"Content-Type\": \"application/json\" },\n          redirect: \"follow\", // manual, *follow, error\n          referrer: \"no-referrer\", // no-referrer, *client\n          body: JSON.stringify(user), // body data type must match \"Content-Type\" header\n      }).then((res) => {\n        if(res.status === 200){\n          props.setLogin(true);\n        }\n      })\n      .then((data) => data)\n      .catch((err)=> err)\n    }\n  }\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <section>\n        <input type=\"text\" name=\"username\" value={username} onChange={handleChange} placeholder=\"username\"/>\n        <input type=\"password\" name=\"password\" value={password} onChange={handleChange} placeholder=\"password\"/>\n      </section>\n      <br/>\n      <section>\n        <button type=\"submit\" className=\"PrimaryButton\">Login</button>\n        {/*<p>Don't have an account? <a href=\"/register\">click here to register</a></p>*/}\n      </section>\n    </form>\n  )\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Link} from 'react-router-dom';\n\nimport EntriesList from './entries-feed';\nimport Login from './loginsystem/login';\n\n// import { ReactComponent as UploadPhotoIcon } from '../svg-files/upload-photo.svg'\n// import { ReactComponent as LargeGear } from '../svg-files/settings-gear-large.svg'\n// import { ReactComponent as SmallGear } from '../svg-files/settings-gear-small.svg'\n\nimport { Controller, Scene } from 'react-scrollmagic';\n\nfunction Main() {\n\n  const [login, setLogin] = useState(false)\n\n  return (\n    <Router>\n      <Controller>\n        <Scene classToggle=\"Header_Animation\" triggerElement=\"#dummy\" offset={50}>\n        <div className=\"GlobalHeader\">\n          <div className=\"GlobalHeader_Left GlobalHeader_List\">\n            <ul className=\"GlobalHeader_Titles\">\n              <li><Link to=\"/\" className=\"GlobalHeader_Logo\">blabber.</Link></li>\n            </ul>\n          </div>\n          <div className=\"GlobalHeader_Right GlobalHeader_List\">\n            <ul className=\"GlobalHeader_Titles\">\n              {login ? <li><button className=\"SecondaryButton\" onClick={() => setLogin(false)}>logout</button></li> : null}\n            </ul>\n          </div>\n        </div>\n        </Scene>\n      </Controller>\n      <div className=\"main_container\">\n        {login ? (\n          <Route path=\"/\" exact component={EntriesList}/>\n        ) : (\n          <Route path=\"/\" render={(props) => <Login setLogin={setLogin}/>} />\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './components/main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}